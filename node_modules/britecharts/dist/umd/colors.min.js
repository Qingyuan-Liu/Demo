(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["colors"] = factory();
	else
		root["britecharts"] = root["britecharts"] || {}, root["britecharts"]["colors"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 323);
/******/ })
/************************************************************************/
/******/ ({

/***/ 106:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {

    // Color Gradients
    var colorGradients = {
        greenBlue: ['#39C7EA', '#4CDCBA'],
        orangePink: ['#FBC670', '#F766B8'],
        bluePurple: ['#3DC3C9', '#824a9e']
    };
    var colorGradientsHuman = {
        greenBlue: 'Green to Blue',
        orangePink: 'Orange to Pink',
        bluePurple: 'Blue to Purple'
    };

    // Color Schemas
    // Standard Color Schema for Britecharts
    var britecharts = ['#6aedc7', //green
    '#39c2c9', //blue
    '#ffce00', //yellow
    '#ffa71a', //orange
    '#f866b9', //pink
    '#998ce3' //purple
    ];
    // Grey Palette
    var grey = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];
    // Orange Palette
    var orange = ['#fcc870', '#ffa71a', '#fb8825', '#f6682f', '#db5a2c', '#bf4c28', '#a43b1c', '#892a10', '#f9e9c5'];
    // Blue Palette
    var blueGreen = ['#ccf7f6', '#70e4e0', '#00d8d2', '#00acaf', '#007f8c', '#005e66', '#003c3f', '#002d2f', '#0d2223'];
    // LightBlue Palette
    var teal = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];
    // Green Palette
    var green = ['#edfff7', '#d7ffef', '#c0ffe7', '#95f5d7', '#6aedc7', '#59c3a3', '#479980', '#34816a', '#206953'];
    // Yellow Palette
    var yellow = ['#f9f2b3', '#fbe986', '#fce05a', '#fed72d', '#ffce00', '#fcc11c', '#f9b438', '#eda629', '#e09819'];
    // Pink Palette
    var pink = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];
    // Purple Palette
    var purple = ['#ddd6fc', '#bbb1f0', '#998ce3', '#8e6bc1', '#824a9e', '#77337f', '#6b1c60', '#591650', '#470f3f'];
    // Red Palette
    var red = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];

    var colorSchemas = {
        britecharts: britecharts,
        grey: grey,
        orange: orange,
        blueGreen: blueGreen,
        teal: teal,
        green: green,
        yellow: yellow,
        pink: pink,
        purple: purple,
        red: red
    };
    var colorSchemasHuman = {
        'britecharts': 'Britecharts Default',
        'grey': 'Britecharts Grey',
        'orange': 'Orange',
        'blueGreen': 'Blue',
        'teal': 'Light Blue',
        'green': 'Green',
        'yellow': 'Yellow',
        'pink': 'Pink',
        'purple': 'Purple',
        'red': 'Red'
    };

    // Single Colors
    var aloeGreen = ['#7bdcc0']; // To Deprecate
    var greenColor = ['#6aedc7'];
    var blueColor = ['#39c2c9'];
    var yellowColor = ['#ffce00'];
    var orangeColor = ['#ffa71a'];
    var pinkColor = ['#f866b9'];
    var purpleColor = ['#998ce3'];

    var singleColors = {
        aloeGreen: aloeGreen,
        greenColor: greenColor,
        blueColor: blueColor,
        yellowColor: yellowColor,
        orangeColor: orangeColor,
        pinkColor: pinkColor,
        purpleColor: purpleColor
    };
    var singleColorsHuman = {
        aloeGreen: 'Aloe Green',
        greenColor: 'Green',
        blueColor: 'Blue',
        yellowColor: 'Yellow',
        orangeColor: 'Orange',
        pinkColor: 'Pink',
        purpleColor: 'Purple'
    };

    return {
        colorSchemas: colorSchemas,
        colorSchemasHuman: colorSchemasHuman,
        colorGradients: colorGradients,
        colorGradientsHuman: colorGradientsHuman,
        singleColors: singleColors,
        singleColorsHuman: singleColorsHuman
    };
}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ 323:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(106);


/***/ })

/******/ });
});
//# sourceMappingURL=colors.min.js.map